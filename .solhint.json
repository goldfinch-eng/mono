{
  "extends": "solhint:recommended",
  "rules": {
    "compiler-version": ["error", "^0.6.12 || ^0.8.4"],
    "prettier/prettier": "error",
    "not-rely-on-time": "off",
    "reason-string": ["warn",{"maxLength":120}],
    "max-line-length": ["error", 120],
    "modifiers/ensure-modifiers": ["error", {
      "ignoreContractKind": ["interface"],
      "required": {
        "*": ["onlyAdmin"]
      },
      "override": {
        "**/PoolTokens.sol:PoolTokens": {
          "mint": ["onlyPool"],
          "redeem": ["onlyPool"],
          "onPoolCreated": ["onlyGoldfinchFactory"],
          "burn": [],
          "getTokenInfo": []
        },
        "*:*.initialize": ["initializer"],
        "*:*.__initialize__": ["initializer"],
        "*:*.null": [],
        "**/CreditDesk.sol:CreditDesk": {
          "createCreditLine": [],
          "createPool": [],
          "drawdown": [],
          "pay": [],
          "assessCreditLine": [],
          "applyPayment": [],
          "migrateCreditLine": [],
          "migrateV1CreditLine": []
        },
        "**/GoldfinchConfig.sol:GoldfinchConfig": {
          "addToGoList": ["onlyGoListerRole"],
          "bulkAddToGoList": ["onlyGoListerRole"],
          "removeFromGoList": ["onlyGoListerRole"],
          "bulkRemoveFromGoList": ["onlyGoListerRole"]
        },
        "**/GoldfinchFactory.sol:GoldfinchFactory": {
          "createCreditLine": [],
          "createBorrower": [],
          "createPool": [],
          "validPool": [],
          "createMigratedPool": []
        },
        "**/CreditLine.sol:CreditLine": {
          "setLimit": []
        },
        "**/V2Migrator.sol:V2Migrator": {
          "upgradeImplementations": []
        },
        "**/MigratedTranchedPool.sol:MigratedTranchedPool": {
          "migrateCreditLineToV2": []
        },
        "**/BaseUpgradeablePausable.sol:BaseUpgradeablePausable": {
          "__BaseUpgradeablePausable__init": []
        },
        "**/Fidu.sol:Fidu": {
          "__initialize__": [],
          "mintTo": [],
          "burnFrom": [],
          "updateGoldfinchConfig": []
        },
        "**/Pool.sol:Pool": {
          "deposit": [],
          "withdraw": [],
          "withdrawInFidu": [],
          "collectInterestAndPrincipal": [],
          "distributeLosses": [],
          "transferFrom": [],
          "drawdown": []
        },
        "**/TranchedPool.sol:TranchedPool": {
          "setAllowedUIDTypes": ["onlyLocker"],
          "deposit": ["whenNotPaused"],
          "depositWithPermit": [],
          "lockJuniorCapital": ["whenNotPaused", "onlyLocker"],
          "lockPool": ["whenNotPaused", "onlyLocker"],
          "setFundableAt": ["onlyLocker"],
          "initializeNextSlice": ["whenNotPaused", "onlyLocker"],
          "withdraw": ["whenNotPaused"],
          "withdrawMax": ["whenNotPaused"],
          "withdrawMultiple": [],
          "drawdown": ["whenNotPaused"],
          "assess": ["whenNotPaused"],
          "pay": ["whenNotPaused"]
        },
        "**/PauserPausable.sol:PauserPausable": {
          "__PauserPausable__init": [],
          "pause": [],
          "unpause": []
        },
        "**/SeniorPool.sol:SeniorPool": {
          "deposit": [],
          "depositWithPermit": [],
          "invest": [],
          "withdraw": [],
          "withdrawInFidu": [],
          "redeem": [],
          "writedown": []
        },
        "**/SeniorPoolFidu.sol:SeniorPoolFidu": {
          "__initialize__": [],
          "mintTo": [],
          "burnFrom": [],
          "updateGoldfinchConfig": []
        },
        "**/TransferRestrictedVault.sol:TransferRestrictedVault": {
          "depositJunior": [],
          "depositJuniorWithPermit": [],
          "depositSenior": [],
          "depositSeniorWithPermit": [],
          "withdrawJunior": [],
          "withdrawSenior": [],
          "withdrawSeniorInFidu": [],
          "transferPosition": []
        },
        "**/DynamicLeverageRatioStrategy.sol:DynamicLeverageRatioStrategy": {
          "setLeverageRatio": ["onlySetterRole"]
        },
        "**/GFI.sol:GFI": {
          "mint": ["onlyMinter"],
          "setCap": ["onlyOwner"],
          "pause": ["onlyPauser"],
          "unpause": ["onlyPauser"]
        },
        "**/StakingRewards.sol:StakingRewards": {
          "stake": [],
          "stakeWithLockup": [],
          "depositAndStake": [],
          "depositWithPermitAndStake": [],
          "depositAndStakeWithLockup": [],
          "depositWithPermitAndStakeWithLockup": [],
          "unstake": [],
          "unstakeAndWithdraw": [],
          "unstakeAndWithdrawMultiple": [],
          "unstakeAndWithdrawInFidu": [],
          "unstakeAndWithdrawMultipleInFidu": [],
          "getReward": [],
          "kick": [],
          "exit": [],
          "exitAndWithdraw": []
        },
        "**/CommunityRewards.sol:CommunityRewards": {
          "grant": ["nonReentrant", "whenNotPaused", "onlyDistributor"],
          "getReward": []
        },
        "**/Go.sol:Go": {
          "go": [],
          "goOnlyIdTypes": [],
          "goSeniorPool": []
        },
        "**/BackerRewards.sol:BackerRewards": {
          "allocateRewards": ["onlyPool"],
          "setPoolTokenAccRewardsPerPrincipalDollarAtMint": [],
          "withdraw": [],
          "withdrawMultiple": []
        },
        "**/MerkleDirectDistributor.sol:MerkleDirectDistributor": {
          "_setGrantAccepted": [],
          "acceptGrant": []
        },
        "**/MerkleDistributor.sol:MerkleDistributor": {
          "_setGrantAccepted": [],
          "acceptGrant": []
        },
        "**/ERC1155PresetPauserUpgradeable.sol:ERC1155PresetPauserUpgradeable": {
          "pause": [],
          "unpause": []
        },
        "**/UniqueIdentity.sol:UniqueIdentity": {
          "mint": ["onlySigner"],
          "safeTransferFrom": [],
          "safeBatchTransferFrom": [],
          "burn": ["onlySigner"]
        },
        "**/TranchingLogic.sol:*": {
          "applyToAllSeniorTranches":  [],
          "applyToAllJuniorTranches": [],
          "applyToSeniorTranche":  [],
          "applyToJuniorTranche": [],
          "applyBySharePrice":  [],
          "applyByAmount": [],
          "migrateAccountingVariables":  [],
          "closeCreditLine": []
        },
        "**/contracts/test/**": {
          "*.*": []
        }
      }
    }]
  },
  "plugins": ["prettier", "modifiers"]
}
